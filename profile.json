{"data":{"user":{"name":"Romain BOURREE","bio":"Typescript & NestJS enthusiast\r\nCraft man ship enthusiast","avatarUrl":"https://avatars.githubusercontent.com/u/6154849?u=fb215ae022a1d47b55bd761e548c0222356ddbf8&v=4","location":"Caen","pinnedItems":{"totalCount":6,"edges":[{"node":{"name":"NEST-Boilerplate","description":"NEST-Boilerplate","forkCount":0,"stargazers":{"totalCount":0},"url":"https://github.com/Rbourree/NEST-Boilerplate","id":"R_kgDOOvQDMg","diskUsage":547,"primaryLanguage":{"name":"TypeScript","color":"#3178c6"}}},{"node":{"name":"NEST-CleanArchitecture","description":"A lightweight Todo API in NestJS illustrating Clean Architecture: domain entities + value objects in a core layer, use-case services as the application ring, and adapters—REST controllers & Prisma persistence—on the outer ring. A concise, self-contained demo for Clean-Arch practice.","forkCount":0,"stargazers":{"totalCount":0},"url":"https://github.com/Rbourree/NEST-CleanArchitecture","id":"R_kgDOOpYOUw","diskUsage":116,"primaryLanguage":{"name":"TypeScript","color":"#3178c6"}}},{"node":{"name":"NEST-DDD","description":"A minimal Todo API built with NestJS that showcases core Domain-Driven Design concepts—separating a pure domain layer (entities & value objects) from application services and infrastructure adapters (Prisma persistence)—to serve as a straightforward, self-contained reference project.","forkCount":0,"stargazers":{"totalCount":0},"url":"https://github.com/Rbourree/NEST-DDD","id":"R_kgDOOpX7jA","diskUsage":111,"primaryLanguage":{"name":"TypeScript","color":"#3178c6"}}},{"node":{"name":"NEST-CQRS","description":"Lightweight Todo API in NestJS illustrating CQRS: Commands mutate state through a CommandBus and handlers, while Queries hit a QueryBus with read-optimized projections. Domain stays clean; Prisma adapts persistence. A concise, self-contained demo for grasping CQRS basics.","forkCount":0,"stargazers":{"totalCount":0},"url":"https://github.com/Rbourree/NEST-CQRS","id":"R_kgDOOpYQCA","diskUsage":0,"primaryLanguage":null}},{"node":{"name":"NEST-Hexagonal","description":"A minimal Todo API built with NestJS that spotlights Hexagonal Architecture (Ports & Adapters): the business core lives in a clean domain layer, while adapters (HTTP controllers, Prisma persistence) plug in around it—making the project a concise, self-contained reference for practicing hex-friendly design.","forkCount":0,"stargazers":{"totalCount":0},"url":"https://github.com/Rbourree/NEST-Hexagonal","id":"R_kgDOOpYJYw","diskUsage":0,"primaryLanguage":null}},{"node":{"name":"NEST-Microservice","description":"ightweight Todo API in NestJS showcasing microservice architecture: isolated domain logic, dedicated Postgres via Prisma, REST interface & RabbitMQ events, deployable as an independent container and discoverable via service registry—perfect as a self-contained microservice starter.","forkCount":0,"stargazers":{"totalCount":0},"url":"https://github.com/Rbourree/NEST-Microservice","id":"R_kgDOOpYULg","diskUsage":0,"primaryLanguage":null}}]}}}}